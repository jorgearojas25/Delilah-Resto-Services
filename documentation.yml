openapi: 3.0.0
info:
  description: Delilah restaurant API
  version: "1.1.0"
  title: Delilah restaurant API
  contact:
    email: jorgearojas25@gmail.com
  license:
    name: Apache 2.0
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
tags:
  - name: Admins
    description: Secured Admin-only calls
  - name: Customers
    description: Operations available to regular customers
  - name: NoAuth 
    description: No auth need services
paths:
  /usuario/signup:
    post:
      tags:
      - NoAuth
      summary: REQ1_Registro_usuario_no_auth
      description: Servicio para el registro de usuario en el sistema y asignacion de roles
      operationId: REQ1_Registro_usuario_no_auth
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/REQ1_Registro_usuario_no_auth_Request'
            example:
              login: creacion
              nombre: test
              apellido: prueba
              correo: prueba@correo.com
              telefono: 1234567890
              direccion: 'Av 34 #2-4'
              password: 123
              fecha_registro: 2020-05-06
              id_rol: 1
        required: true
      responses:
        200:
          description: ''
          headers: {}
      deprecated: false
  /item:
    get:
      tags:
      - Customers
      - Admins
      summary: REQ2_lista_productos_CUSTOMERTOKEN
      description: Servicio para listar los productos del sistema, se necesita autenticacion de un admin o un customer
      operationId: REQ2_lista_productos_CUSTOMERTOKEN
      parameters: []
      responses:
        200:
          description: ''
          headers: {}
      deprecated: false
    post:
      tags:
      - Admins
      summary: REQ5_1_Creacion_item_ADMINTOKEN
      description: >+
        Servicio para la creacion de items, se requiere autenticacion como admin del sistema

      operationId: REQ5_1_Creacion_item_ADMINTOKEN
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/REQ5_1_Creacion_item_ADMINTOKEN_Request'
            example:
              nombre: Creacion
              descripcion: Prueba Creacion
              valor: 20000
        required: true
      responses:
        200:
          description: ''
          headers: {}
      deprecated: false
    put:
      tags:
      - Admins
      summary: REQ5_2_Update_item_ADMINTOKEN
      description: Edicion de un pedido solo por parte de los administradores del sistema
      operationId: REQ5_2_Update_item_ADMINTOKEN
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/REQ5_2_Update_item_ADMINTOKEN_Request'
            example:
              id_item: 9
              imagen: 
              nombre: Edicion
              descripcion: Prueba Edicion
              valor: 20000
        required: true
      responses:
        200:
          description: ''
          headers: {}
      deprecated: false
  /pedido:
    post:
      tags:
      - Customers
      - Admins
      summary: Objeto_Respuesta
      description: Creacion de pedidos, usa el id del usuario, la forma de pago y un listado de items del sistema, se necesita autenticacion como customer o admin
      operationId: Objeto_Respuesta
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/REQ3_Crear_pedido_CUSTOMERTOKEN_Request'
            example:
              id_usuario: 2
              id_formas_pago: 1
              items:
              - id_item: 1
                cantidad: 2
              - id_item: 2
                cantidad: 1
        required: true
      responses:
        200:
          description: ''
          headers:
            X-Powered-By:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Express
            Content-Length:
              content:
                text/plain:
                  schema:
                    type: string
                  example: 48
            ETag:
              content:
                text/plain:
                  schema:
                    type: string
                  example: W/"30-V+CaWX1INXmjx1LlYhpk4fGAZmQ"
            Date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Sun, 21 Jun 2020 06:59:37 GMT
            Connection:
              content:
                text/plain:
                  schema:
                    type: string
                  example: keep-alive
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Objeto_Respuesta'
              example:
                resultado: true
                entidades:
                - 1
                mensajes: []
      deprecated: false
    put:
      tags:
      - Admins
      summary: REQ4_Upadte_pedido_ADMINTOKEN
      description: Servicio para editar el pedido, se requiere autenticacion como admin del sistema
      operationId: REQ4_Upadte_pedido_ADMINTOKEN
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/REQ4_Upadte_pedido_ADMINTOKEN_Request'
            example:
              id_pedido: 1
              valor_total: 20000.00
              fecha_pedido: 2020-05-26T20:31:58Z
              id_usuario: 2
              id_estado_pedido: 2
              id_formas_pago: 1
        required: true
      responses:
        200:
          description: ''
          headers: {}
      deprecated: false
    get:
      tags:
      - Admins
      - Customers
      summary: 6_Lista_Pedidos_ADMINTOKEN
      description: Servicio para listar los pedidos en el sistema, se requiere autenticacion de admin o customer, si es admin se tienen todos los pedidos y si es customer se tienen los pedidos de ese customer
      operationId: 6_Lista_Pedidos_ADMINTOKEN
      parameters: []
      responses:
        200:
          description: ''
          headers: {}
      deprecated: false
  /pedido/{id_pedido}:
    delete:
      tags:
      - Admins
      summary: REQ4_1_delete_pedido_ADMINTOKEN
      description: Servicio para eliminar un pedido y su factura correspondiente
      operationId: REQ4_1_delete_pedido_ADMINTOKEN
      parameters:
        - name: id_pedido
          in: path
          required: true
          description: id de el pedido
          schema:
            type: integer
            format: int32
            minimum: 1
      responses:
        200:
          description: ''
          headers: {}
      deprecated: false
  /item/{id_item}:
    delete:
      tags:
      - Admins
      summary: REQ5_3_Delete_item_TOKENADMIN
      description: servicio para eliminar un producto del sistema, se requiere autenticacion como admin
      operationId: REQ5_3_Delete_item_TOKENADMIN
      parameters:
        - name: id_item
          in: path
          required: true
          description: id de el pedido
          schema:
            type: integer
            format: int32
            minimum: 1
      responses:
        200:
          description: ''
          headers: {}
      deprecated: false
  /login:
    post:
      tags:
      - NoAuth
      summary: 1_Login_no_auth
      description: Servicio para identificarse en el sistema, retorna un token para su uso en los servicios
      operationId: 1_Login_no_auth
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/1_Login_no_auth_Request'
            example:
              login: admin
              password: 123
        required: true
      responses:
        200:
          description: ''
          headers: {}
      deprecated: false
  /usuario:
    get:
      tags:
      - Admins
      summary: 2_Lista_Usuarios_ADMINTOKEN
      description: Servicio para listar los usuarios del sistema, se requiere autenticacion como admin
      operationId: 2_Lista_Usuarios_ADMINTOKEN
      parameters: []
      responses:
        200:
          description: ''
          headers: {}
      deprecated: false
  /formasDePago:
    get:
      tags:
      - NoAuth
      summary: 3_Formas_de_pago_no_auth
      description: Servicio para listar las formas de pago del sistema
      operationId: 3_Formas_de_pago_no_auth
      parameters: []
      responses:
        200:
          description: ''
          headers: {}
      deprecated: false
      security: []
  /estadoPedido:
    get:
      tags:
      - NoAuth
      summary: 4_Estado_pedido_no_auth
      description: Servicio para listar los estados del pedido en el sistema
      operationId: 4_Estado_pedido_no_auth
      parameters: []
      responses:
        200:
          description: ''
          headers: {}
      deprecated: false
      security: []
  /rol:
    get:
      tags:
      - NoAuth
      summary: 5_Lista_roles_no_auth
      description: Servicio para listar los roles del sistema
      operationId: 5_Lista_roles_no_auth
      parameters: []
      responses:
        200:
          description: ''
          headers: {}
      deprecated: false
components:
  schemas:
    REQ1_Registro_usuario_no_auth_Request:
      title: REQ1_Registro_usuario_no_auth_Request
      required:
      - login
      - nombre
      - apellido
      - correo
      - telefono
      - direccion
      - password
      - fecha_registro
      - id_rol
      type: object
      properties:
        login:
          type: string
        nombre:
          type: string
        apellido:
          type: string
        correo:
          type: string
        telefono:
          type: string
        direccion:
          type: string
        password:
          type: string
        fecha_registro:
          type: string
        id_rol:
          type: integer
          format: int32
      example:
        login: creacion
        nombre: test
        apellido: prueba
        correo: prueba@correo.com
        telefono: 1234567890
        direccion: 'Av 34 #2-4'
        password: 123
        fecha_registro: 2020-05-06
        id_rol: 1
    REQ3_Crear_pedido_CUSTOMERTOKEN_Request:
      title: REQ3_Crear_pedido_CUSTOMERTOKEN_Request
      required:
      - id_usuario
      - id_formas_pago
      - items
      type: object
      properties:
        id_usuario:
          type: integer
          format: int32
        id_formas_pago:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: '#/components/schemas/Item'
          description: ''
      example:
        id_usuario: 2
        id_formas_pago: 1
        items:
        - id_item: 1
          cantidad: 2
        - id_item: 2
          cantidad: 1
    Item:
      title: Item
      required:
      - id_item
      - cantidad
      type: object
      properties:
        id_item:
          type: integer
          format: int32
        cantidad:
          type: integer
          format: int32
      example:
        id_item: 1
        cantidad: 2
    Objeto_Respuesta:
      title: Objeto_Respuesta
      required:
      - resultado
      - entidades
      - mensajes
      type: object
      properties:
        resultado:
          type: boolean
        entidades:
          type: array
          items:
            type: object
          description: 'Contienen el resultado de la operacion en un array de elementos del tipo'
        mensajes:
          type: array
          items:
            type: string
          description: 'En caso de fallo contiene los mensajes de error para mostrar al usuario'
      example:
        resultado: true
        entidades:
        - 1
        mensajes: []
    REQ4_Upadte_pedido_ADMINTOKEN_Request:
      title: REQ4_Upadte_pedido_ADMINTOKEN_Request
      required:
      - id_pedido
      - valor_total
      - fecha_pedido
      - id_usuario
      - id_estado_pedido
      - id_formas_pago
      type: object
      properties:
        id_pedido:
          type: integer
          format: int32
        valor_total:
          type: string
        fecha_pedido:
          type: string
        id_usuario:
          type: integer
          format: int32
        id_estado_pedido:
          type: integer
          format: int32
        id_formas_pago:
          type: integer
          format: int32
      example:
        id_pedido: 1
        valor_total: 20000.00
        fecha_pedido: 2020-05-26T20:31:58Z
        id_usuario: 2
        id_estado_pedido: 2
        id_formas_pago: 1
    REQ5_1_Creacion_item_ADMINTOKEN_Request:
      title: REQ5_1_Creacion_item_ADMINTOKEN_Request
      required:
      - nombre
      - descripcion
      - valor
      type: object
      properties:
        nombre:
          type: string
        descripcion:
          type: string
        valor:
          type: integer
          format: int32
      example:
        nombre: Creacion
        descripcion: Prueba Creacion
        valor: 20000
    REQ5_2_Update_item_ADMINTOKEN_Request:
      title: REQ5_2_Update_item_ADMINTOKEN_Request
      required:
      - id_item
      - imagen
      - nombre
      - descripcion
      - valor
      type: object
      properties:
        id_item:
          type: integer
          format: int32
        imagen:
          type: string
          nullable: true
        nombre:
          type: string
        descripcion:
          type: string
        valor:
          type: integer
          format: int32
      example:
        id_item: 9
        imagen: 
        nombre: Edicion
        descripcion: Prueba Edicion
        valor: 20000
    1_Login_no_auth_Request:
      title: 1_Login_no_auth_Request
      required:
      - login
      - password
      type: object
      properties:
        login:
          type: string
        password:
          type: string
      example:
        login: admin
        password: 123
  securitySchemes:
    bearerAuth:            
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
  - bearerAuth: []